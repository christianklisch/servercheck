{"name":"Servercontrol","tagline":"ServerControl to check and control server and services","body":"# ServerControl\r\n\r\nOpen Source tool to view server and service state and control server in your company created and maintained by Christian Klisch.\r\n\r\n## Quick start\r\n\r\n* Download the latest release\r\n\r\nDon't forget to configure\r\n* ServerControl configuration\r\n* XML Tasks\r\n* Webinterface template\r\n\r\n## Download and Installation\r\n\r\nDownload the latest release from github. \r\n\r\n### Start ServerControl\r\n\r\nSwitch to your install directory 'servercontrol'. Start from commandline with:\r\n```\r\n# Linux\r\n$ sh ./bin/servercontrol\r\n\r\n# Windows:\r\n> .\\bin\\servercontrol.bat\r\n\r\n```\r\n\r\n\r\n## Configuration\r\n\r\n### Tool ServerControl in config.properties\r\n\r\nYou'll find the tool configuration in file './bin/config/config.properties' with parameters:\r\n* port = TCP-Port of webserver for controlling server and services (e.g. 8080)\r\n* idle_time = Pause between service checks in ms (e.g. 5000 ms)\r\n* xml_path = Path to your XML-files with task configurations (e.g. ./xml/ or /nas/servercontrol/xml/)\r\n\r\n### Task configuration in XML-file\r\n\r\nIn the xml-directory you can create a config for each task. There are different types of tasks:\r\n* View-command to execute a command to check a service\r\n* Execute-command to execute a command to control a service\r\n\r\n#### View-command\r\n\r\nAn example XML-File for a view-command:\r\n\r\n```\r\n<CommandView>\r\n  <filename>r0.xml</filename>\r\n  <id>r0</id>\r\n  <description>Skript returning value 0 WIN-ONLY</description>\r\n  <command>\r\n    @echo off\r\n    echo 0\r\n  </command>\r\n  <lastResult>0</lastResult>\r\n  <lastExecute>\r\n    <time>1376777069722</time>\r\n    <timezone>Europe/Berlin</timezone>\r\n  </lastExecute>\r\n  <regexOk>0</regexOk>\r\n  <regexWarn>1</regexWarn>\r\n  <targetOS>Windows</targetOS>\r\n</CommandView>\r\n```\r\n\r\nDescription of the tags:\r\n* filename = Filename of the XML-configuration, is set automatically\r\n* id = first part of filename without extension, must be the same name\r\n* description = Description of the task\r\n* command = Command or small skript to execute\r\n* lastResult = last commandresult, set by ServerControl\r\n* lastExecute = last timestamp of execution, set by ServerControl\r\n* regexOK = regular expression to check for for correct execution result (lastResult)\r\n* regexWarn = regular expression to check for for warning execution result (lastResult)\r\n* targetOS = system, where to run script (Windows / Linux)\r\n\r\nIf the regular expressions of 'regexOK' and 'regexWarn' doesn't match the 'lastResult', an error-icon will be shown on webinterface.\r\n\r\n\r\n#### Execute-command\r\n\r\nAn example XML-File for a execute-command:\r\n\r\n```\r\n<CommandExec>\r\n  <filename>r1.xml</filename>\r\n  <id>r1</id>\r\n  <description>Skript starting calculator WIN-ONLY</description>\r\n  <command>\r\n    @echo off\r\n    start calc\r\n  </command>\r\n  <lastResult>0</lastResult>\r\n  <lastExecute>\r\n    <time>1376777069722</time>\r\n    <timezone>Europe/Berlin</timezone>\r\n  </lastExecute>\r\n  <regexOk>0</regexOk>\r\n  <regexWarn>1</regexWarn>\r\n  <targetOS>Windows</targetOS>\r\n</CommandView>\r\n```\r\n\r\nDescription of the tags:\r\n* filename = Filename of the XML-configuration, is set automatically\r\n* id = first part of filename without extension, must be the same name\r\n* description = Description of the task\r\n* command = Command or small skript to execute\r\n* lastResult = last commandresult, set by ServerControl\r\n* lastExecute = last timestamp of execution, set by ServerControl\r\n* regexOK = regular expression to check for for correct execution result (lastResult)\r\n* regexWarn = regular expression to check for for warning execution result (lastResult)\r\n* targetOS = system, where to run script (Windows / Linux)\r\n\r\nIf the regular expressions of 'regexOK' and 'regexWarn' doesn't match the 'lastResult', an error-icon will be shown on webinterface.\r\n\r\n#### Remote execution\r\n\r\nTo execute a command on a remote server add following tags:\r\n```\r\n  ...\r\n  <sshserver>my-ssh-server.domain</sshserver>\r\n  <sshuser>root</sshuser>\r\n  <sshpassword>password</sshpassword>\r\n  <sshdirectory>/home/sshuser/tmp/</sshdirectory>\r\n  ...\r\n```\r\n\r\nDescription of the tags:\r\n* sshserver = hostname of the remote system\r\n* sshuser = loginname for ssh\r\n* sshpassword = password for sshuser\r\n* sshdirectory = directory for execution of given command\r\n\r\nThe command of the command-tag will be copied via ssh to the remote system and execute on it. The command result will be saved in the attribute 'lastResult'.\r\n\r\n### Webinterface template\r\n\r\ntbd\r\n\r\n## Authors\r\n\r\n**Christian Klisch**\r\n\r\n+ [http://github.com/christianklisch](http://github.com/christianklisch)\r\n\r\n\r\n## Copyright and license\r\n\r\nCopyright 2013 Christian Klsich, Inc under [the GPL](LICENSE).\r\n","google":"UA-570856-7","note":"Don't delete this file! It's used internally to help with page regeneration."}